{"version":3,"sources":["components/Card.jsx","components/Container.jsx","components/App.jsx","index.js"],"names":["Edit","cals","name","data","index","setData","setEditMode","useState","editCals","setEditCals","editName","setEditName","className","Input","type","onChange","event","target","value","label","Button","variant","onClick","newData","filter","ele","id","Card","editMode","color","InputNewCard","setCals","setName","TextField","nanoid","Container","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.753db219.chunk.js","sourcesContent":["import \"../styles.css\";\nimport { Button, Input } from '@material-ui/core';\nimport { useState } from 'react';\n\nfunction Edit({ cals, name, data, index, setData, setEditMode }) {\n\n    const [editCals, setEditCals] = useState(cals);\n    const [editName, setEditName] = useState(name);\n\n    function editDone() {\n        const newData = data.filter((ele, id) => {\n            if (id === index) {\n                ele.cals = editCals;\n                ele.name = editName;\n            }\n            return ele;\n        })\n        setData(newData);\n        setEditMode(false);\n    }\n\n    function handleCalsChange(event) {\n        setEditCals(event.target.value);\n    }\n    function handleNameChange(event) {\n        setEditName(event.target.value);\n    }\n    return (\n        <div className=\"card\">\n            <Input type=\"text\" onChange={handleNameChange} label=\"Food Item\" value={editName} />\n            <Input type=\"number\" onChange={handleCalsChange} label=\"Calories\" value={editCals} />\n            <Button variant=\"contained\" onClick={editDone}>Done</Button>\n        </div>\n    )\n}\n\nfunction Card({ cals, name, data, setData, index }) {\n    const [editMode, setEditMode] = useState(false)\n    if (!editMode) {\n        return (\n            <div className=\"card\">\n                <div>Consumed {name} with {cals}</div>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                    setEditMode(true);\n                }}>Edit</Button>\n\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n                    const newData = data.filter((ele, id) => index !== id)\n                    setData(newData);\n                }}>Delete</Button>\n            </div>\n        )\n    }\n    return (\n        <Edit cals={cals} name={name} data={data} index={index} setData={setData} setEditMode={setEditMode} />\n    )\n\n}\n\nexport default Card;","import '../styles.css';\nimport Card from './Card';\nimport { useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport { nanoid } from 'nanoid';\n\nfunction InputNewCard({ data, setData }) {\n\n    const [cals, setCals] = useState(0);\n    const [name, setName] = useState(\"Food Item\")\n    function addCard() {\n        const newData = [...data, { \"cals\": cals, \"name\": name, \"id\": nanoid() }]\n        setData(newData);\n    }\n\n    function nameChangeHandler(event) {\n        setName(event.target.value);\n    }\n\n    function calsChangeHandler(event) {\n        setCals(event.target.value);\n    }\n\n    return (\n        <div>\n            <TextField variant=\"outlined\" onChange={nameChangeHandler} label=\"Food Item\" type=\"text\" />\n            <TextField variant=\"outlined\" onChange={calsChangeHandler} label=\"Calories\" type=\"number\" />\n            <Button variant=\"contained\" onClick={addCard}>Add</Button>\n        </div>\n    )\n}\n\nfunction Container() {\n    const [data, setData] = useState([]);\n    return (\n        <div className=\"container\">\n            <InputNewCard data={data} setData={setData} />\n            {\n                data.map((ele, index) => {\n                    return <Card key={ele.id} setData={setData} cals={ele.cals} name={ele.name} index={index} data={data} />\n                })\n            }\n        </div>\n    );\n\n}\n\nexport default Container;","import '../styles.css';\nimport Container from './Container';\n\nfunction App() {\n    return (\n        <div className=\"page\">\n            <Container/>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}